<?php



/* Задание № 1
 Определить сложность следующих алгоритмов:
- Поиск элемента массива с известным индексом
- Дублирование одномерного массива через foreach
- Рекурсивная функция нахождения факториала числа
- Удаление элемента массива с известным индексом

- Поиск элемента массива с известным индексом
$arr = [5, 4, 7];   О(1)
$x = $arr[1];       О(1)

О(1) + О(1)
сложность  О(1)

- Дублирование одномерного массива через foreach
$arr = [5, 4, 7];                   О(1)
$arr2 = [];                         О(1)
foreach ($arr as $item){            О(n)
    $arr2[] = $item;                О(1)
}

О(1) + О(1) + 1*О(n)
сложность  О(n)


- Рекурсивная функция нахождения факториала числа
function factorial ($n){
    if ($n ==0 || $n == 1) return 1;
    return $n * factorial($n - 1);
}
echo factorial(5);

Тут функция factorial вызовется n раз
сложность  О(n)


- Удаление элемента массива с известным индексом
$arr = [5, 4, 7, 9, 11];                О(1)
$id = 3;                                О(1)

for($i = 0; $i < count($arr); $i++){    О(n)
    if($i != $id)                       О(1)
    $arr2[] = $arr[$i];                 О(1)
}
var_dump($arr2);

О(1)+ О(1) + 2*O(n)    отбрасываем О(1) т.к. они ниже уровнем и число 2 (операция условия и присваивания внутри цикла).
сложность  О(n)


А если не сдвигать элементы???
$arr = [5, 4, 7, 9, 11];                О(1)
if (isset($arr[$i]))   О(1)
unset($arr[$i]);   О(1)
var_dump($arr);

сложность  О(1)


2.Определить сложность следующих алгоритмов. Сколько произойдет итераций?
1)

$n = 100;                                   О(1)
$array[] = [];                              О(1)

for ($i = 0; $i < $n; $i++) {               О(n) 100 итераций
    for ($j = 1; $j < $n; $j *= 2) {        О(log(n))  7 итераций 1 + log 100 по основанию 2 = 6,644
        $array[$i][$j]= true;               О(1)
    } 
}

О(1) + О(1) + 1*О(n)*О(log(n))
сложность О(n*log(n)) кол-во итераций 700 

2)

$n = 100;                                    О(1)
$array[] = [];                               О(1)

for ($i = 0; $i < $n; $i += 2) {             O(n) 50 итераций
    for ($j = $i; $j < $n; $j++) {           O(n) 51 итерация
        $array[$i][$j]= true;                О(1)
    }   
}

О(1) + О(1) + 1*О(n)*О(n)
сложность О(n^2) кол-во итераций 2550

*/